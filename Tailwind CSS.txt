
//==============================================================================================
													******	Tailwind CSS	 ******
//==============================================================================================

			//-- Documentation : https://tailwindcss.com/docs



//-------------------------------------------------------------------------------------------------------------------------------------------
				//-------Upgrading your Tailwind CSS projects from v2 to v3. || Tailwind CSS v3.0-----------//
						-- Release notes: https://tailwindcss.com/blog/tailwindcss-v3
						-- Upgrade guide: https://tailwindcss.com/docs/upgrade-guide
						-- YT link:  https://www.youtube.com/watch?v=mSC6GwizOag&list=WL&index=2&t=34s
//-------------------------------------------------------------------------------------------------------------------------------------------


//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
											//-------------- Resources of Tailwind CSS --------------//
				-- Learn with sumit YT : https://www.youtube.com/playlist?list=PLHiZ4m8vCp9P23SqlHL0QAqiwS_oCofV2
							-- Learn with sumit git : https://github.com/learnwithsumit/tailwind-playlist				
				-- YT -Landing Page : https://www.youtube.com/watch?v=00gyCtIQp8E&list=WL&index=2&t=64s
				
				-- YT - Programming_kit
							- blog : https://www.youtube.com/playlist?list=PLzBl445W4ietiXaqMk8_-XCPUQAGR2iaZ
							- small template : https://www.youtube.com/playlist?list=PLzBl445W4ievo4RdH1xX1nzFHFFj0rxXj
							- ecommerce : https://www.youtube.com/playlist?list=PLzBl445W4ieshIswFhOOTwnbvlEhQPc81
				-- YT - complete tilwind course : https://www.youtube.com/watch?v=lZp4salRFFc&t=571s
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------



//---------------------------------------------------------------------------------------------------------------------------------------------
				-- My_GitHub_repo: https://github.com/Shahed-Chy-Suzan/Tailwind-CSS-Practice
//---------------------------------------------------------------------------------------------------------------------------------------------







//==========================================================================================================================
											------------------ Start Tailwind CSS -----------------------
//==========================================================================================================================



//======================================================================================================================
													******	#02 Tailwind Installation	 ******
//======================================================================================================================
//-------------------------------------------------------------- #02 Tailwind Installation --------------------------------------------------
			
		//-- Tailwind CSS k 3vabe  use kora jai, niche ta likha holo:
			//--1-- Installation with Tialwind CSS CDN	 //but ei process e korle amra tailwind k customize korte parbo na.
			//--2-- Install as PostCSS Plugin 	//difficult for fresher //tailwind css k postCSS er ekta plugin hisebe use kora. 
			//--3-- Install tailwind CLI 	//easier process //etar fole amara Command Line diye tailwind use korte parbo. //etai best approach //customize korte parbo.
							-- tailwind CLI machine e install er prerequisit hocche machine e Node.js >= 12.3.0 install thakte hobe ( https://nodejs.org ).
									-- check node installed or not, command: node -v
		
		//-- VS Code plugin for tailwind css : 
						-- Link: https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss
						-- plugin name: Tailwind CSS IntelliSense
						
		//-- Tailwind CSS installation by Command line (CLI)					
						-- npm init -y							//1ti node initialize kore pelbo //will create a ''package.json' file
						-- npm i -D tailwindcss		//tailwind css k developer dependency hisebe install kore nibo package.json file er dependency te
						-- npx tailwindcss init			//tailwind css er jonno ekti configuration file banano. //project er moddhe "tailwind.config.js" name e ekti file create hoye jabe. ei file e amra tailwind er sokol configuration + customization er kaj korte parbo.
						
						-- ekn amra amder project e "output" & "src" hisebe 2ta file create korbo.
									-- 'src' folder e amra tailwind er kajkarbar korbo R 'output' folder e tailwind amader k tar compiler er sahajje ekdom vanilla CSS toiri kore dibe.
									-- "src" folder er vitore "tailwind.css" name e ekta file create korbo. amara etai random name o dithe pari no problem, oi file e nicher 3ta line add kore/likhe dithe hobe.
												-- @tailwind base;
												-- @tailwind components;
												-- @tailwind utilities;

		//-- create ".vscode" folder then create a "settings.json" file into this. then write this below code into this "settings.json" file for tailwind project purpose.
						-- .vscode
								-- settings.json
											{
											  "css.validate": false,
											  "tailwindCSS.emmetCompletions": true
											}

		//-- in "package.json" file add below code in 'scripts'
						  "scripts": {
								// "test": "echo \"Error: no test specified\" && exit 1",									//ei line default chilo, eta delete kore dibo.
								"build": "tailwindcss -i ./src/tailwind.css -o ./output/tailwind.css -w"			//-- newly added for tailwind code build
						  },
						  
					//--ekhane build scripts tai "-i" name holo input, "-o" mane holo output, "-w" mane holo watch(auto build/watch), ekhane amra bole diyechi j amader ei project er tailwindCss er jonno input file konta R output(jeta raw css e convert/compile/build hobe) file konta hobe, ekhan e amra output file ta jodio create kori ni manually just name ta bole diyechi build-scripts e, R amader k ekta create o korte hobe na, eta automatic ei name e onosare create hoye jabe.
					
		//-- create an "index.html" file in project root
		
		//-- compile/build howar por amra output e j css file ta(ei project er khettre 'tailwind.css') pabo oita k amader "index.html" file e head er moddhe link koriye dithe hobe. Ehane amader must be ei compile/build howa css file ta kei html file path thik rekhe link korate hobe.
							-- <link rel="stylesheet" href="./output/tailwind.css" />
							
		//-- run command: npm run build			//eti amder code k build kore pelbe, amra ready ekn code korar jonno tailwind css e.




//======================================================================================================================
													******	#03 Utility-First Approach	 ******
//======================================================================================================================
//------------------------------------------------------------- #03 Utility-First Approach ------------------------------------------------------------------------
		//-- Tailwind- utility first approach use kore, ar Onnodike Bootstrap components based(ex: full Card banano thake) approach use kore.
		//-- doc_link: https://tailwindcss.com/docs/utility-first



//======================================================================================================================
													******	#04 Responsive variants - Tailwind Breakpoints	 ******
//======================================================================================================================
//--------------------------------------------------- #04 Responsive variants - Tailwind Breakpoints ---------------------------------------------------------
			//-- https://tailwindcss.com/docs/responsive-design
			
			
			
//======================================================================================================================
													******	#05 Hover focus & other state variants	 ******
//======================================================================================================================
//--------------------------------------------------- #05 Hover focus & other state variants -------------------------------------------------------------------
			//-- https://tailwindcss.com/docs/hover-focus-and-other-states



//======================================================================================================================
													******	#06 Dark mode variant	 ******
//======================================================================================================================
//--------------------------------------------------- #06 Dark mode variant --------------------------------------------------------------------------------------
			//-- https://tailwindcss.com/docs/dark-mode
			-- 1 -- amra dark mood er jonno ( dark:bg-gray-900 ) ei class gula add kori tailwind-css e, evabe just "dark" variant class ta add korle amader website dark hobe amader PC/machine/laptop er theme-preference er opor, amane amader PC/machine/laptop er theme jodi dark e set kora thake taile website automatic tailwind er dark code gula use korbe, & PC/machine/laptop e theme dark set kora na thakle default/white theme er code use korbe tailwind.
			
			-- 2 -- Toggling dark mode manually : --> If you want to support toggling dark mode manually instead of relying on the operating system preference, use the 'class' strategy instead of the 'media' strategy:
					//---------------------------- tailwind.config.js ----------------------------------------
							module.exports = {
								  darkMode: 'class',
							}
							
					//-----------------------------index.html -----------------------------------------------
							<!-- Dark mode enabled -->
							<html class="dark">			//----------------------------
							<body>
							  <!-- Will be black -->
							  <div class="bg-white dark:bg-black">
								<!-- ... -->
							  </div>
							</body>
							</html>
							
			//-- dark-mood code/preference order:-->> sm:dark:hover:bg-gray-700 || dark:focus:ring-offset-gray-800 || responsiveVariant:dark:statVariant




//======================================================================================================================
													******	#07 Composing Utilities with @apply Directive	 ******
//======================================================================================================================
//------------------------------------------------- #07 Composing Utilities with @apply Directive ------------------------------------------------------------
			//-- documentation_link: https://tailwindcss.com/docs/reusing-styles#extracting-classes-with-apply
			//-- amra amader project e reuseable CSS code gular jonno chaile ei @apply use kore kaj korte pari,
			
					//------------------------------------------ index.html ------------------------------------------------------
							<button class="btn btn-purple">Visit now</button> <button class="btn btn-green ml-2">Website</button>
							
					//----------------------------------- src/tailwind.css -------------------------------------------------------
							/*----- group utilities -----*/
							.btn {
								  @apply px-4 py-1 border rounded-full text-sm font-semibold focus:outline-none focus:ring-2 focus:ring-offset-2 hover:text-white hover:border-transparent dark:focus:ring-offset-gray-800 dark:focus:border-transparent;
								  @apply p-2;
							}

							.btn-purple {
								@apply border-purple-200 text-purple-600 hover:bg-purple-600 focus:ring-purple-600 dark:text-purple-400;
							}

							.btn-green {
								@apply border-green-200 text-green-600 hover:bg-green-600 focus:ring-green-600 dark:text-green-400;
							}
							
			//-- @apply p-2 px-4 py-1  -->> ekhane @apply te css file e specificity k beshi priority dibe, ekhane px-4,py-1 specific, tai ekahne p-2 code ta k tailwind nibe na/kaj korbe na.  //tao jodi amra chai j ekhane p-2 kei lagbe amder, taile multiple @apply diye dithe hobe, ex: @apply p-2;



//============================================================================================================================
										******	#08 Tailwind @layer Directive - Understand Tailwind Layers	 ******
//============================================================================================================================
//----------------------------------------------------- #08 Tailwind @layer Directive - Understand Tailwind Layers ------------------------------------------------------------
			//-- documentation_link: https://tailwindcss.com/docs/adding-custom-styles#using-css-and-layer
			
			//------------------------------ adding @layer to css "components" ( @layer components ) ---------------------------------------
					//-- amra jodi ekn oporer code er html file er Visit Now button tai ekta tailwind er default class "rouded-sm" dei taile dekbo j amader output e ta change hocche na,
							-- <button class="btn btn-purple rounded-sm">Visit now</button>
						-- er karon hocche amra ekhane html file 'rouded-sm' dileo amader css file e amra kinto 'rounded-full' dichilam, tai oitai pacche output e, because amader ei css code build howar somoy 'tailwind.css' file er sequence onosare aghe @tailwind base; @tailwind components; @tailwind utilities; then erpor eshe amader custom css code gula execute kore, ejonno amader pore html file e likha default utilities class(rounded-sm) code ta kaj korteche na, 
						
									-- ekn eitar jonno 1ta way holo amra jodi amader css file e ei "@tailwind utilities;" code ta k amader kora css er custom code gular niche niye ashi taile dekha jabe kaj korteche,
												//------------------------------------------------------- html file -------------------------------------------
																<button class="btn btn-purple rounded-sm">Visit now</button>
												//----------------------------------------------------- src/tailwind.css file ---------------------------------------------
															@tailwind base;
															@tailwind components;
															  .btn-purple {
																@apply border-purple-200 text-purple-600 hover:bg-purple-600 focus:ring-purple-600 dark:text-purple-400;
															  }
															@tailwind utilities;

									-- kinto evabe hole tho bepar ta valo dekhacche na jodi amader onek beshi custom css code add kora lage amader components e, tai amra ekhane @layer use kore kaj korbo, mane amader ja ja custom css code components e dhokano prowojon ta amra ei @layer components{} use kore code korbo, taile amader code easily kaj korbe, structure o sondor thaklo.
									-- The components layer is for class-based styles that you want to be able to override with utilities.
												//----------------------------------------------------- src/tailwind.css file ---------------------------------------------
															@tailwind base;
															@tailwind components;
															@tailwind utilities;
															
															@layer components {
																  /* group utilities */
																  .btn-green {
																	@apply border-green-200 text-green-600 hover:bg-green-600 focus:ring-green-600 dark:text-green-400;
																  }
															}
													
							//------------//------------//-------------//--------------//-----------------//---------------//----------------//--------
							
			//---------------------------------------- adding @layer to css "base" ( @layer base ) ------------------------------------------------------
			
							-- ekn emara dekbo kivabe "base" layer kaj kore, amara ekn amader html file er <p> tag ta k <h1> tag kore dei, taile normally dekbo j amader code er output e change hocche na, because 
							-- The base layer is for things like reset rules or default styles applied to plain HTML elements.
							-- The components layer is for class-based styles that you want to be able to override with utilities.
							-- The utilities layer is for small, single-purpose classes that should always take precedence over any other styles.
							-- documentation_link: https://tailwindcss.com/docs/preflight

										//------------------------------------------------------- html file -------------------------------------------
														<h1 class="text-lg text-black font-semibold dark:text-gray-300">Learn with Sumit</h1>
										//----------------------------------------------------- src/tailwind.css file ---------------------------------------------
													@tailwind base;
													@tailwind components;
													@tailwind utilities;
													
													@layer base {
														  h1 {
															@apply text-2xl;
														  }
													}
							//------------//------------//-------------//--------------//-----------------//---------------//----------------//-------------
							
			//---------------------------------------- adding @layer to css "utilities" ( @layer utilities ) ------------------------------------------------------
							-- ekn emara dekbo kivbe "utilities" layer kaj kore, amara jodi chai j amader ai system e amra amader nijossho kicho utilities class banabo, taile amra tkn ta amader CSS file e ei utilities layer er code likte hobe, for example: 
										//------------------------------------------------------- html file -------------------------------------------
														<p class="text-body text-gray-500 font-medium dark:text-gray-400">YouTube Channel</p>
										//----------------------------------------------------- src/tailwind.css file ---------------------------------------------
													@tailwind base;
													@tailwind components;
													@tailwind utilities;
													
													@layer utilities {
														  .text-body {
																font-size: 12px;
														  }
													}




//======================================================================================================================
													******	#09 @variants Directive	 ******
//======================================================================================================================
//------------------------------------------------- #09 @variants Directive ------------------------------------------------------------
			
			//-- documentation_link: https://v2.tailwindcss.com/docs/functions-and-directives#variants
			//-- amra jani ekhane amra j amader custom kicho css code likhi ta amra amader project er CSS file er "@layer utilities{}" er moddhe likhe thaki, but amra amader ei newly add kora custom CSS code gula kinto amra tailwind e statVariant (hover, focus etc) te dile kaj korbe na, So eigula k amader statVariant e kaj koranor jonno amader k @variants directive use korte hobe, @variants er pashe amader statVariant ta mention kore css code ta likte hobe, niche ekta example deya holo,
					//------------------------------------------------------- html file -------------------------------------------
									<body>
											<div class="hover:rotate-0"> Lorem ipsum dolor sit amet consectetur adipisicing elit repellendus! </div>
									</body>
					//----------------------------------------------------- src/tailwind.css file ---------------------------------------------
									@variants focus, hover {
										  .rotate-0 {
												color: yellow;
												text-decoration: underline;
										  }
									}



//===========================================================================================================================
													******	#10 @responsive and @screen Directives	 ******
//===========================================================================================================================
//------------------------------------------------- #10 @responsive and @screen Directives ------------------------------------------------------------
			
			//-- @responsive -->> documentation_link: https://v2.tailwindcss.com/docs/functions-and-directives#responsive
						-- amra etokkon amader tailwind e default j utilities gula ache ogula k easily responsive korte partam (  sm:text-white ) erokom likhe, but amra ekn jodi amader nijer banano css class gula k evabe responsive e use korte chai taile amader k @responsive directive use korte hobe, for example:
							//------------------------------------------------------- html file -------------------------------------------
										  <div class="sm:bg-gradient-responsive">
												Lorem ipsum dolor sit amet consectetur adipisicing elit. Earum minus ullam voluptatem
										  </div>
							//----------------------------------------------------- src/tailwind.css file ---------------------------------------------
											@responsive {
												  .bg-gradient-responsive {
														background-image: linear-gradient(blue, green);
												  }
											}
			
			//-- @screen -->> documentation_link: https://v2.tailwindcss.com/docs/functions-and-directives#screen
						-- amra etokkon amader tailwind e default j utilities gula ache ogula k easily responsive korte partam (  sm:text-white ) erokom likhe, but amra ekn jodi amader nijer banano css class gula k evabe responsive e use korte chai taile amader k @responsive directive use korte hobe, && amra jodi chai j amader ei new own created css class gula k vibinno device onosare responsive korte taile amader k ei @screen derective ( @screen sm{} ) or ( @media screen(sm){} ) use korte hobe, for example:
								//------------------------------------------------------- html file -------------------------------------------
											  <div class="bg-gradient-screen text-yellow-600">
													screen  screen  screen  screen  screen  screen  screen  screen  screen  screen  screen 
											  </div>
								//----------------------------------------------------- src/tailwind.css file ---------------------------------------------
												@screen md {
													  .bg-gradient-screen {
															background-image: linear-gradient(blue, black);
													  }
												}
												//------------------OR--------------------------
												@media screen(md) {
													  .bg-gradient-screen {
															background-image: linear-gradient(blue, black);
													  }
												}



//============================================================================================================================
													******	#11 theme() and screen() - Tailwind Functions	 ******
//============================================================================================================================
//------------------------------------------------- #11 theme() and screen() - Tailwind Functions ------------------------------------------------------------
			
			//-- theme() -->> documentation_link: https://v2.tailwindcss.com/docs/functions-and-directives#theme
						-- Use the theme() function to access your Tailwind config values using dot notation.
								//----------------------------------------------------- src/tailwind.css file ---------------------------------------------
											.content-area {				/* for theme() */
												height: calc(100vh - theme("spacing.12"));
											}




//============================================================================================================================
													******	#12 Tailwind Configurations	 ******
//============================================================================================================================
//------------------------------------------------- #12 Tailwind Configurations ------------------------------------------------------------
			
			//-- Configurations -->> documentation_link: https://v2.tailwindcss.com/docs/configuration
						//----------------------------------------- tailwind.config.js -----------------------------------------------------------
									module.exports = {
										  purge: [],
										  darkMode: 'class', // or 'media' or 'class' //default vabe ( false ) likha chilo //'class' for dark mood on toggle
										  theme: {
												extend: {},
										  },
										  variants: {
												extend: {},
										  },
										  plugins: [],
									}

						-- purge : ekhane amra jani 'purge' means porisker/clean kora, amader er tailwind e onek onek buildin class royeche eisob class kinto build hoy na, amra ja ja class amader html/project file e use kori khoje khoje just oi class gulai build hoy, R ei kaj ta kore hocche 'purge', amra chaile ekahne ei configuration file/tailwind.config.js file er purge[] array ta thee amra j j file gula theke build korar jonno class filter/bachai korbo oi file gular path bole dithe pari, jar fole just oi file gular e css class gula build hobe, onnanno class+tailwind  er baki default sob class gula build hobe na.
						
						-- darkMood : eta niye amra opore dark mood variant section e jenechi, tao jodi shortcut e bolte hoy, ekhane darkMood er 2ta value thakte pare, ekta holo 'media' R arekta holo 'class', jokon amra 'media' dibo tkn amader machine/laptop er theme er preference(dark/light) onosare show/kaj korbe, R amra jodi 'class' dei taile amader whole html er file e top level e ekta 'dark' class add kore dibe tarpor amra dark: diye dark variant er maddhome ei kaj ta korte pari,
						
						-- theme : 'theme' e amra amader pora design system ta bole dibo, 'theme' ta holo bishal ekta object,( https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/defaultConfig.stub.js ), 'theme' er moddhe vibinno plugin gula bolbo(ex: spacing, color). amra jodi chai j ekhane tailwind e j 'gray-300' color ta ache ta amr pochondo noi, ami eta k change korbo, taile amader k tkn ei config er 'theme' e hath deya lagbe, ( link: https://v2.tailwindcss.com/docs/customizing-colors )
								-- amra ekn ekta custom color add kora dekbo, ekhane amra theme er moddhe color object e ekta new blue color add korechi 450 name e, so amra ekn eta k easily amader code e "text-blue-450" likhe use korte parbo, BUT ekhane problem holo ekhane "colors" object ta deowai amader tailwind er pora default 'colors' object tai ar kaj korbe na, amader project e ei 'colors' object tai just kaj korbe, tar mane amara tailwind er default vabe set kore deowa attogula color variant/color palatte gula ar use korte parbo na, nicher code e amader tailwind er default color "bg-yellow-400" code ta kaj korbe na, only "text-blue-450" ta kaj korbe,
										//----------------------------------------- index.html -----------------------------------------------------------
													<div class="bg-yellow-400 text-blue-450"> Lorem ipsum dolor sit amet consectetur adipisicing elit. Earum minus ullam voluptatem quis eos commodi facere, dolor animi quam non </div>
										
										//----------------------------------------- tailwind.config.js -----------------------------------------------------------
													  theme: {
																colors: {
																	  blue: {
																			450: '#5F99F7'
																	  },
																},
															extend: {},
													  },
													  
								-- So ei problem theke solution holo, mane amra jodi chai j amra j new color ta add korbo oitao thakbe ++ amader tailwind er default set kore deya color-palette gulao thakbe, kaj korbe taile amader k ai color customization er code ta amader config file er "theme" er "extend{}" object er vitor likhte hobe, ( link: https://v2.tailwindcss.com/docs/customizing-colors#extending-the-defaults ), amader ekhane nicher code e amader tailwind er default color "bg-yellow-400" code tao kaj korbe ++ amader new create kora "text-blue-450" ta kaj korbe,
										//----------------------------------------- index.html -----------------------------------------------------------
												  <div class="bg-yellow-400 text-blue-450"> Lorem ipsum dolor sit amet consectetur adipisicing elit. Earum minus ullam voluptatem quis eos commodi facere, dolor animi quam non </div> <br>
												  <div class="bg-regal-blue"> legal blue legal blue legal blue legal blue legal blue </div>
										//----------------------------------------- tailwind.config.js -----------------------------------------------------------
													module.exports = {
														  theme: {
																extend: {
																	  colors: {
																			blue: {
																				450: '#5F99F7'								//text-blue-450
																			},
																			'regal-blue': '#243c5a',					//bg-regal-blue
																	  }
																}
														  }
													}
													//--------------or-----------------------
													module.exports = {
														  theme: {
																extend: {
																	  colors: {
																			blue: {
																				450: '#5F99F7'
																			},
																	  }
																}
														  }
													}

						-- variants : variants section o same, mane amra kon kon variants allow korte chai, oporer theme er motho concept, amra chaile tailwind er sob default variants(hover,focus) badh diye nijer variants create and use korte pari, Or extends kore tailwind er default gular pashapashi new variants create koreo use korte pari,
						
						-- plugins : plugins er moddhe amra chaile third-party tailwind plugin gula array er moddhe comma(,) akare bole dithe pari, segula amra just install korbo(npm install) R import korbo, 




//============================================================================================================================
													******	#13 PostCSS Installation	 ******
//============================================================================================================================
//------------------------------------------------- #13 PostCSS Installation ------------------------------------------------------------

			//--PostCSS tailwindcss k ekta plugin hisebe use kore, PostCSS ekta famous CSS tooling, saas/less egula css er prepocessor, ar postCSS css k pore transform kore, er sobida holo modern jesob framwork ache ogula under the hood ei postCSS kei use kore, for example next.js or other framwork e amra dekbo j amader k extra vabe eirom tailwind css install kora lage nai, default vabei royeche tailwind css, kinto tailwind tho onek pore esheche next.js theke! taile eta kivabe holo? ekhane ora postCSS use kore, mane ora bivinno plugin er sobida rekheche, kew plugin dile tara ta project e add kre dei, tai Tailwind tader postCSS er ekta plugin hisebe ekta tailwind k diye diyeche, postCSS onek fast, plugin(like autoprefixer),customization sobida royeche, aro onek sobida royeche ei postCSS e, amra ekn ei postCSS installation method ta dekbo. 
			
					--1-- installation: npm i postcss postcss-cli autoprefixer			//postcss + autoprefixer plugin install
								-- in package.json file we will see:
										  "dependencies": {
												"autoprefixer": "^10.4.0",
												"postcss": "^8.4.4",
												"postcss-cli": "^9.0.2"
										   }
											  
					--2-- npx tailwindcss init -p			//postcss.config.js + tailwind.config.js file create
									-- in postcss.config.js -------------
												module.exports = {
													  plugins: {
															tailwindcss: {},
															autoprefixer: {},
													  },
												}

				--3-- in package.json file add a 'build-p' scripts to build postCSS -----------------------
							  "scripts": {
									"build": "tailwindcss -i ./src/tailwind.css -o ./output/tailwind.css -w",
									"build-p": "postcss ./src/tailwind.css -o ./output/tailwind.css -w"
							  },
							  
				-- run project by command: npm run build-p





//============================================================================================================================
																			******	#14 Just in Time (JIT)	 ******
//============================================================================================================================
//---------------------------------------------------------- #14 Just in Time (JIT) ------------------------------------------------------------
			-- JIT documentation_link: https://v2.tailwindcss.com/docs/just-in-time-mode#enabling-jit-mode
			-- Just In Time (JIT) eta tailwind version 2 theke start hoyeche, ekn obosso version 3 chone asheche, amra normally amader tailwind project e run(command: npm run build) korle dekte pai j amader tailwind er css gula build hoye run hothe besh onek ta tile nei, pora tailwind er css ta build hothe besh onek time nei, ei j eto time niye nei sei jonno tailwind JIT mode(just in time mode) ta niye asheche, mainly JIT concept ta asheche javascript theke, sekhaneo just in time compiler ache, ekn normally amader project build time e run hocche time niye, R amra jodi JIT mode enable kori taile amader project run-time e run korbe, amra jodi HTML e class ani shei onojayi CSS chole asbe main css file, JIT use korle amader k 'purge' o use korte hobe, amader bole dithe hobe kono file gular css minimalist hoye amader k run time e show korbe.
			
			--1-- To enable just-in-time mode, set the mode option to 'jit' in your tailwind.config.js file.
			--2-- Since JIT mode generates your CSS on-demand by scanning your template files, it’s crucial that you configure the purge option in your tailwind.config.js file with all of your template paths, otherwise your CSS will be empty.
					-- './public/**/*.html', --->> means project er root e 'public' folder er vitor e jao, then okhane something thakteo pare abar nao pare, then er vitor jao okhane '.html' file ta/gulo k dhoro.
					-- './src/**/*.{js,jsx,ts,tsx,vue}', --->> kono folder er moddhe thaka multiple file k track korte chaile evabe {} er vitor likhte hobe file gular extention,
					-- '*.html', --->> project er root e index.html file ta ke track korbe
			
					 //------------------------ tailwind.config.js -----------------------------
							  module.exports = {
								   mode: 'jit',													//-----------1---------
								   purge: [														//-----------2--------- 
										'./public/**/*.html',							// These paths are just examples, customize them to match your project structure
										'./src/**/*.{js,jsx,ts,tsx,vue}',			//details opore likha hoyeche
										'*.html',													//project er root e index.html file ta ke track korbe
								   ],
									theme: {
										// ...
									}
										// ...
							  }




//============================================================================================================================
																****	#15 Theme Configuration ++ #16 Extend Theme	 ****
//============================================================================================================================
//---------------------------------------------------------- #15 Theme Configuration ++ #16 Extend Theme ------------------------------------------------------------
			-- Theme Configuration documentation_link v2: https://v2.tailwindcss.com/docs/theme
			-- Theme Configuration documentation_link v3: https://tailwindcss.com/docs/theme
			
			-- YouTube link: https://www.youtube.com/watch?v=VTOLMaaTKw0&list=PLHiZ4m8vCp9P23SqlHL0QAqiwS_oCofV2&index=15
			
			-- Theme Configuration : --->>> The theme section of your tailwind.config.js file is where you define your project’s color palette, type scale, fonts, breakpoints, border radius values, and more.
			
			-- Extending the default theme - If you’d like to preserve the default values for a theme option but also add new values, add your extensions under the extend key in the theme section of your configuration file.
			-- Overriding the default theme - To override an option in the default theme, add your overrides directly under the theme section of your tailwind.config.js, This will completely replace Tailwind’s default configuration for that key, so in the example above none of the default opacity utilities would be generated. 

			-- baki onek concept " #12 Tailwind Configurations " e alochona kora hoyechilo opore. +++ check documentation_link








//============================================================================================================================
													******	Whats New in V3 in Tailwind CSS	 ******
//============================================================================================================================
//------------------------------------------------- Whats New in V3 in Tailwind CSS ------------------------------------------------------------
					
				-- Release notes: https://tailwindcss.com/blog/tailwindcss-v3
				-- Upgrade guide: https://tailwindcss.com/docs/upgrade-guide
				-- YT link:  https://www.youtube.com/watch?v=mSC6GwizOag&list=WL&index=2&t=34s
				
				
				-- Remove dark mode configuration
				-- Remove variant configuration ++ Replace @variants with @layer
				-- JIT engine : --->> 
							-- Upgrade Link: https://tailwindcss.com/docs/upgrade-guide#migrating-to-the-jit-engine 
							-- If you were already opting in to mode: 'jit' in Tailwind CSS v2.x, you can safely remove that from your configuration in v3.0. 
							-- Configure content sources :
									-- Since Tailwind no longer uses PurgeCSS under the hood, we’ve renamed the purge option to content to better reflect what it’s for. Since Tailwind no longer uses PurgeCSS under the hood, we’ve renamed the purge option to content to better reflect what it’s for. 
											//---------------------------------------------------- tailwind.config.js ------------------------------------------------------------------
															module.exports = {
																  purge: [						//---------- XXXX --- this is no longer exist now, replaced with 'content'--- XXXX---------------
																  content: [
																		// Example content paths...
																		'./public/**/*.html',
																		'./src/**/*.{js,jsx,ts,tsx,vue}',
																  ],
																  theme: {
																		// ...
																  }
																  // ...
															}












//============================================================================================================================
													******	#17 Extend Variants	 ******
//============================================================================================================================
//------------------------------------------------- #17 Extend Variants ------------------------------------------------------------
			-- Extend Variants documentation_link v2: https://v2.tailwindcss.com/docs/configuring-variants
			-- YouTube link: https://www.youtube.com/watch?v=laKTuk-002s&list=PLHiZ4m8vCp9P23SqlHL0QAqiwS_oCofV2&index=17













